name: 'Terraform'

on:
  push:
    branches:
    - "main"
  pull_request:

permissions:
  contents: read

env:
  TerraformVersion: 1.2.4
  DeployRegion: westeurope
  SharedResourceGroup: devstarops-shared-rg
  SharedStorage: dsosharedstorage
  SharedStorageContainer: tfstate

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: test

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Azure CLI script
      uses: azure/CLI@v1
      with:
        azcliversion: 2.36.0
        inlineScript: |
          az group create --resource-group $SharedResourceGroup --location $DeployRegion

          az storage account create --name $SharedStorage --resource-group $SharedResourceGroup --location $DeployRegion --access-tier Hot --allow-blob-public-access false --https-only true --kind StorageV2 --sku Standard_ZRS

          az storage container create -n $SharedStorageContainer --account-name $SharedStorage --resource-group $SharedResourceGroup

          ACCOUNT_KEY=$(az storage account keys list --resource-group $SharedResourceGroup --account-name $SharedStorage --query '[0].value' -o tsv)
          export ARM_ACCESS_KEY=$ACCOUNT_KEY

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ env.TerraformVersion }}

    - name: Terraform Init
      run: terraform init -var-file="envs/test.tfvars" -backend-config="envs/test.tfbackend"

    - name: Terraform Plan
      run: terraform plan -var-file="envs/test.tfvars" -out="envs/test.tfplan"

    - name: Terraform Apply
      if: github.ref == 'refs/heads/"main"' && github.event_name == 'push'
      run: terraform apply -auto-approve -json "envs/test.tfplan"
