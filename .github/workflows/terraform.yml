name: 'Terraform'

on:
  push:
    branches:
    - "main"
  pull_request:

permissions:
  contents: read

env:
  TerraformVersion: 1.2.5
  DeployRegion: westeurope
  SharedResourceGroup: devstarops-shared-rg
  SharedStorage: dsosharedstorage
  SharedStorageContainer: tfstate

jobs:
  setup:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: test

    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Azure CLI script
      uses: azure/CLI@v1
      with:
        azcliversion: 2.36.0
        inlineScript: |
          az group create --resource-group $SharedResourceGroup --location $DeployRegion

          az storage account create --name $SharedStorage --resource-group $SharedResourceGroup --location $DeployRegion --access-tier Hot --allow-blob-public-access false --https-only true --kind StorageV2 --sku Standard_ZRS

          az storage container create -n $SharedStorageContainer --account-name $SharedStorage --resource-group $SharedResourceGroup

          ACCOUNT_KEY=$(az storage account keys list --resource-group $SharedResourceGroup --account-name $SharedStorage --query '[0].value' -o tsv)
          export ARM_ACCESS_KEY=$ACCOUNT_KEY

  deploy_test:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'test'
      # url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Deploy terraform template
        uses: ./.github/actions/terraform-deployto
        with:
          environmentName: test
          terraformVersion: ${{ env.TerraformVersion }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

  deploy_production:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'production'
      # url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Deploy terraform template
        uses: ./.github/actions/terraform-deployto
        with:
          environmentName: production
          terraformVersion: ${{ env.TerraformVersion }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}